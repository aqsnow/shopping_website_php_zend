<?php
namespace Auth\Controller;


use Zend\Mvc\Controller\AbstractActionController;
use Zend\View\Model\ViewModel;
use Auth\Entity\User; 
use Auth\Form\LoginForm;       
use Auth\Form\LoginFilter;

class IndexController extends AbstractActionController
{
    public function indexAction()
    {
		$em = $this->getEntityManager();
			
		$users = $em->getRepository('Auth\Entity\User')->findAll();		
		
        $message = $this->params()->fromQuery('message', 'foo');
        return new ViewModel(array(
			'message' => $message,
			'users'	=> $users,
		));
    }
	
    public function loginAction()
    {
		$form = new LoginForm();
		$form->get('submit')->setValue('Login');
		$messages = null;

		$request = $this->getRequest();
        if ($request->isPost()) {

			$form->setInputFilter(new LoginFilter($this->getServiceLocator()));
            $form->setData($request->getPost());
			
            if ($form->isValid()) {
				$data = $form->getData();			

				$authService = $this->getServiceLocator()->get('Zend\Authentication\AuthenticationService');		
				
				$adapter = $authService->getAdapter();
				$adapter->setIdentityValue($data['username']);
				$adapter->setCredentialValue($data['password']); 
				$authResult = $authService->authenticate();
				if ($authResult->isValid()) {
					$identity = $authResult->getIdentity();
					$authService->getStorage()->write($identity);
					$time = 1209600; 
					if ($data['rememberme']) {
						$sessionManager = new \Zend\Session\SessionManager();
						$sessionManager->rememberMe($time);
					}
					
				}
				foreach ($authResult->getMessages() as $message) {
					$messages .= "$message\n"; 
				}	


			}
		}

		return new ViewModel(array(
			'error' => 'Your authentication credentials are not valid',
			'form'	=> $form,
			'messages' => $messages,
		));
    }
	
	public function logoutAction()
	{
	
		$auth = $this->getServiceLocator()->get('Zend\Authentication\AuthenticationService');


		if ($auth->hasIdentity()) {
	
			$identity = $auth->getIdentity();

		}
		$auth->clearIdentity();

		$sessionManager = new \Zend\Session\SessionManager();
		$sessionManager->forgetMe();
		
		return $this->redirect()->toRoute('auth/default', array('controller' => 'auth', 'action' => 'login'));
		
	}	
	
	public function authTestAction()
	{
		if ($user = $this->identity()) { 
		} else {
			
		}
	}            
	protected $em;
	 
	public function getEntityManager()
	{
		if (null === $this->em) {
			$this->em = $this->getServiceLocator()->get('doctrine.entitymanager.orm_default');
		}
		return $this->em;
	}
}
